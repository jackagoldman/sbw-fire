---
title: "defol-fire-data-clean"
format: html
editor: visual
---

```{r}
library(sf)
library(tidyverse)

sbw_firew <- st_read("~/Google Drive/My Drive/OntBSdb/Defoliation/SBW_84to2020/ON_Fire_Perimeters_SBW_CR_84to2020_v0.shp")

sbw_fire2 <- st_read("~/Google Drive/My Drive/OntBSdb/Defoliation/SBW_70to83/ON_Fire_Perimeters_SBW_70to80_v0.shp")



```

# 

Join sbw datafames together

```{r}
sbw_perc <- sbw_firew |> 
  select(!matches("_a")) |> 
  select(c(Fire_ID, Fire_Year, SBW_1984_p:SBW_2020_p)) |> 
  st_drop_geometry()

sbw_perc2 <- sbw_fire2 |> 
  select(!matches("_a")) |> 
  select(c(Fire_ID, Fire_Year, SBW_1970_p:SBW_1983_p)) |> 
  st_drop_geometry()

sbw_perc <- sbw_perc |> 
  left_join(sbw_perc2, by = "Fire_ID") |> 
  rename(Fire_Year = Fire_Year.x) |> 
  select(-c(Fire_Year.y))

```

Was fire defoliated?

-   select all fires that end with percentage?

```{r}
defol_calc <- function(data){
  require(tidyverse)
  #create new column
  x <- data |> add_column(defol = NA)
  # get column names
  cols <- x |> select(starts_with("SBW")) |> colnames()
  
  #round the values
  x <- x |> mutate(across(3:53, round, 3))
  #make sure its row wise
  x <-  x |> rowwise()
  
  
  # have to make a function that selects columns with year greater than fire_year and sets them to 0
  
  fireYear0 <- function(x){
    #remove _p from SBW column names 
    names(x) <- gsub(x = names(x), pattern = "_p", replacement = "") 
    # remove SBW_ from SBW column names
    names(x)<- gsub(x = names(x), pattern = "SBW_", replacement = "")  
    
    #pivot to longer dataframe with years and percent defoliated to single        column 
    x <-  pivot_longer(x, !Fire_ID:Fire_Year, names_to = "SBW_Year", values_to = "perc_defol")
    
    #replace all nas with 0
    x <-  mutate_all(x, ~replace_na(.,0))
    
    #replace all values in years after fire to 0
    x <- x |>
      rowwise() |> 
      mutate(defol = case_when(Fire_Year <= SBW_Year ~ 0, 
                               TRUE ~ perc_defol))
    
    
    #replace all values in years that are greater than 15 years before fire
    x <- x |> 
      rowwise() |> 
      mutate(defol = case_when(SBW_Year < (Fire_Year - 15) ~0,
                               TRUE ~ perc_defol))
    
    # remove percen_defoliated
    x <- select(x, -c(perc_defol))
    
    #add to column names
    
    #pivot wider
    x <- pivot_wider(x, id_cols = Fire_ID:Fire_Year, names_from = "SBW_Year", values_from = "defol")
    
    return(x)
  }
  
  #run fire Year function
  x <- fireYear0(x)
   
  # remove fire year
  x <- select(x, -c(Fire_Year))
  
  #function rowAny() sums TRUE and False with TRUE = 1 and FALSE = 0. If there is any TRUE value, the sum will be greater than 0 and that is taken as TRUE
  rowAny <- function(x) rowSums(x) > 0

  # get column with true or false if it fire was defoliated greater than 25% 
  # in given year
  x <- mutate(x, defol = rowAny(across(where(is.numeric), ~ .x > 25)))
  
  #mutate true false to equal 1 for defol and 0 for non defol
  x <- mutate(x, defol = case_when(defol == TRUE ~ 1,
                                   defol == FALSE ~ 0))
  
  #count number of years in the 15 year interval that it was defoliated
  rowCount <- function(x) colSums(x)>0
  
  x <- mutate(x, years_defol = rowCount(across(2:52, ~ .x >0)))
    
    

  
  #count successive years it was defoliated
    
  
  # return data frame
  return(x)
  
  
}

test <- defol_calc(sbw_perc)
```

```         
```
